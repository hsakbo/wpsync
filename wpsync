#! /bin/sh
perror() {
    echo $1 1>&2 && exit $2
}

exprq() {
  local value

  test "$2" = ":" && value="$3" || value="$2"
  expr "$1" : "$value" 1>/dev/null
}

parse_line() {
    local tmp_ifs=$IFS
    IFS=","
    local line=`echo $1 | sed s/#.*$//g`
    for vars in $2; do
	if [ "$vars" = "" ]; then
	    continue
	fi
	lval=$(echo "$vars" | awk -F= '{print $1}')
	rval=$(echo "$vars" | awk -F= '{print $2}')
	line=`echo "$line" | sed s\|\$"$lval"\|"$rval"\|g`
    done
    IFS=$tmp_ifs
    PARSED_LINE=$line
}

handle_sync() {
    local line=$(($2+1))
    tmp_ifs=$IFS
    IFS=","
    for hItem in $1; do
    	lval=$(echo "$hItem" | awk -F= '{print $1}')
	rval=$(echo "$hItem" | awk -F= '{print $2}')
	if [ -z "$lval" ]; then
	    continue
	fi
	case $lval in
	    FROM)
		local from=$rval/
		;;
	    TO)
		local to=$rval
		;;
	    EXCLUDE)
		if [ "$rval" != "" ]; then
		    exclude="--exclude $rval $exclude"
		fi		
		;;
	    PORT)
		local port="ssh -p $rval"
		;;
	    DRY)
		local dry="--dry-run"
		;;
	    PASSWORD)
		local pass=$rval
		;;
	    *)
		perror "Error: unknown attribute \"$lval\" in line: $line" 5
		;;
	esac
    done
    IFS=$DEFAULT_IFS #this is because parameters aren't fed properly without default delimiter
    
    if [ -z ${from+x} ] || [ -z ${to+x} ] || [ "$from" = "" ] || [ "$to" = "" ]; then
	perror "Error: not provided from/to in line: $line" 6
    fi
    
    rsync --progress -av ${port:+-e "$port"} $dry $exclude "$from" "$to"
    
    dry=
    port=
    from=
    to=
    exclude=
    IFS=$tmp_ifs #newline delimiter to continue with parsing
}

handle_db() {
    echo stub
}

bcon="$(dirname $0)/.bconfig"
if [ ! -f $bcon ]; then
    perror "error: bconfig file does not exist" 3
fi

### logic for getting attributes inside [SYNC] tags
VARIABLES=
shifted=0
DEFAULT_IFS=$IFS
IFS='
'
while read -r item; do
    parse_line "$item" "$VARIABLES"
    item=$PARSED_LINE
    if [ "$item" = '[SYNC]' ]; then
	PARAM=
	inner_loop=0
	while read -r inner_param; do
	    parse_line "$inner_param" "$VARIABLES"
	    inner_param=$PARSED_LINE
	    if [ $inner_loop -le $shifted ]; then
		inner_loop=$(($inner_loop+1))
		continue
	    elif [ "$inner_param" = "[/SYNC]" ]; then
		inner_loop=$(($inner_loop+1))
		break
	    fi
	    PARAM="$PARAM,$inner_param"
	    inner_loop=$(($inner_loop+1))
	done < "$bcon"
	handle_sync $PARAM $shifted

    elif [ "$item" = '[DATABASE]' ]; then
	handle_db

    elif exprq "$item" "^[a-zA-Z_0-9]*=*"; then
	VARIABLES="$VARIABLES","$item"
    fi
    shifted=$(($shifted+1))
done < "$bcon"
### end logic for getting attributes inside [SYNC] tags
